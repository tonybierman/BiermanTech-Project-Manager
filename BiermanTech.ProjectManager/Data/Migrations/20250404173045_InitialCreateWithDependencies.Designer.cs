// <auto-generated />
using System;
using BiermanTech.ProjectManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiermanTech.ProjectManager.Data.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20250404173045_InitialCreateWithDependencies")]
    partial class InitialCreateWithDependencies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectNarrativeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectNarrativeId")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.ProjectNarrative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Results")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProjectNarratives");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.TaskDependency", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DependsOnId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskId", "DependsOnId");

                    b.HasIndex("DependsOnId");

                    b.ToTable("TaskDependencies");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PercentComplete")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "PercentComplete");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasAnnotation("Relational:JsonPropertyName", "Children");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.Project", b =>
                {
                    b.HasOne("BiermanTech.ProjectManager.Models.ProjectNarrative", "Narrative")
                        .WithOne("Project")
                        .HasForeignKey("BiermanTech.ProjectManager.Models.Project", "ProjectNarrativeId");

                    b.Navigation("Narrative");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.TaskDependency", b =>
                {
                    b.HasOne("BiermanTech.ProjectManager.Models.TaskItem", "DependsOnTask")
                        .WithMany()
                        .HasForeignKey("DependsOnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiermanTech.ProjectManager.Models.TaskItem", "Task")
                        .WithMany("TaskDependencies")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DependsOnTask");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.TaskItem", b =>
                {
                    b.HasOne("BiermanTech.ProjectManager.Models.TaskItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BiermanTech.ProjectManager.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.ProjectNarrative", b =>
                {
                    b.Navigation("Project")
                        .IsRequired();
                });

            modelBuilder.Entity("BiermanTech.ProjectManager.Models.TaskItem", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("TaskDependencies");
                });
#pragma warning restore 612, 618
        }
    }
}
